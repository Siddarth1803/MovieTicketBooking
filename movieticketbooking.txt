
							MOVIETICKETBOOKING CODE IN C
CODE LINK: https://onlinegdb.com/L6LuDFML8

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_ROWS 10
#define MAX_COLS 10
#define MAX_SEATS 100

void adminMenu();
void userMenu();
void displaySeats(char seats[MAX_ROWS][MAX_COLS]);
void reserveSeats(char seats[MAX_ROWS][MAX_COLS], int numTickets, float ticketRate);
void cancelSeats(char seats[MAX_ROWS][MAX_COLS], int numTickets);
void viewAvailableSeats(char seats[MAX_ROWS][MAX_COLS]);
int authenticateAdmin();

// Global variables
float ticketRate = 10.0;
char bookedSeats[MAX_ROWS][MAX_COLS] = {{0}};

// User information structure
struct UserInfo {
    char name[50];
    char mobile[15];
};

int main() {
    int choice;

    do {
        printf("\n===== Movie Ticket Booking System =====\n");
        printf("1. Admin\n");
        printf("2. User\n");
        printf("3. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                if (authenticateAdmin()) {
                    adminMenu();
                } else {
                    printf("Authentication failed! Try again.\n");
                }
                break;
            case 2:
                userMenu();
                break;
            case 3:
                printf("Exiting program. Goodbye!\n");
                break;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    } while (choice != 3);

    return 0;
}

void adminMenu() {
    int adminChoice;

    do {
        printf("\n===== Admin Menu =====\n");
        printf("1. Set Ticket Rate\n");
        printf("2. View Booked Seats\n");
        printf("3. Logout\n");
        printf("Enter your choice: ");
        scanf("%d", &adminChoice);

        switch (adminChoice) {
            case 1:
                printf("Enter the new ticket rate: ");
                scanf("%f", &ticketRate);
                printf("Ticket rate updated successfully!\n");
                break;
            case 2:
                printf("Viewing booked seats:\n");
                displaySeats(bookedSeats);
                break;
            case 3:
                printf("Logging out from admin mode.\n");
                break;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    } while (adminChoice != 3);
}

void userMenu() {
    int userChoice;
    int numTickets;
    struct UserInfo user;

    do {
        printf("\n===== User Menu =====\n");
        printf("1. Book Tickets\n");
        printf("2. Cancel Tickets\n");
        printf("3. View Available Seats\n");
        printf("4. Logout\n");
        printf("Enter your choice: ");
        scanf("%d", &userChoice);

        switch (userChoice) {
            case 1:
                printf("Enter your name: ");
                scanf("%s", user.name);

                printf("Enter your mobile number: ");
                scanf("%s", user.mobile);

                printf("Enter the number of tickets to book: ");
                scanf("%d", &numTickets);

                reserveSeats(bookedSeats, numTickets, ticketRate);
                printf("\nBooking Details:\n");
                printf("Name: %s\n", user.name);
                printf("Mobile: %s\n", user.mobile);
                printf("Number of Tickets: %d\n", numTickets);
                printf("Ticket Rate: $%.2f\n", ticketRate);
                printf("Total Amount: $%.2f\n", numTickets * ticketRate);
                printf("Seats booked successfully!\n");
                break;
            case 2:
                printf("Enter the number of tickets to cancel: ");
                scanf("%d", &numTickets);
                cancelSeats(bookedSeats, numTickets);
                printf("%d ticket(s) canceled successfully!\n", numTickets);
                break;
            case 3:
                viewAvailableSeats(bookedSeats);
                break;
            case 4:
                printf("Logging out from user mode.\n");
                break;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    } while (userChoice != 4);
}

void displaySeats(char seats[MAX_ROWS][MAX_COLS]) {
    printf("\n----- Seat Layout -----\n");
    for (int i = 0; i < MAX_ROWS; i++) {
        for (int j = 0; j < MAX_COLS; j++) {
            int seatNumber = i * MAX_COLS + j + 1;
            if (seats[i][j] == 0) {
                printf("%3d ", seatNumber);
            } else {
                printf("*   ");
            }
        }
        printf("\n");
    }
}

void reserveSeats(char seats[MAX_ROWS][MAX_COLS], int numTickets, float ticketRate) {
    displaySeats(seats);
    printf("Select seats by entering seat numbers:\n");

    for (int i = 0; i < numTickets; i++) {
        int seatNumber;
        printf("Enter seat number for ticket %d: ", i + 1);
        scanf("%d", &seatNumber);

        int row = (seatNumber - 1) / MAX_COLS;
        int col = (seatNumber - 1) % MAX_COLS;

        if (seatNumber >= 1 && seatNumber <= MAX_SEATS && seats[row][col] == 0) {
            seats[row][col] = 1; // Mark seat as reserved
        } else {
            printf("Invalid seat selection. Please try again.\n");
            i--; // Repeat seat selection for the current ticket
        }
    }
}

void cancelSeats(char seats[MAX_ROWS][MAX_COLS], int numTickets) {
    displaySeats(seats);
    printf("Select seats to cancel by entering seat numbers:\n");

    for (int i = 0; i < numTickets; i++) {
        int seatNumber;
        printf("Enter seat number for ticket %d: ", i + 1);
        scanf("%d", &seatNumber);

        int row = (seatNumber - 1) / MAX_COLS;
        int col = (seatNumber - 1) % MAX_COLS;

        if (seatNumber >= 1 && seatNumber <= MAX_SEATS && seats[row][col] == 1) {
            seats[row][col] = 0; // Mark seat as available
        } else {
            printf("Invalid seat selection. Please try again.\n");
            i--; // Repeat seat selection for the current ticket
        }
    }
}

void viewAvailableSeats(char seats[MAX_ROWS][MAX_COLS]) {
    displaySeats(seats);
}

int authenticateAdmin() {
    char password[20];
    printf("Enter admin password: ");
    scanf("%s", password);

    // Compare with the actual password (You can set your own password)
    return strcmp(password, "admin123") == 0;
}